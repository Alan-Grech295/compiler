let SIZE: int = 5;

let minHeight: int = 10;

let xS: float[3] = [0.0];
let yS: float[3] = [10.0];

for(let i: int = 0; i < 3; i = i + 1){
    xS[i] = (__random_int __width) as float;
    yS[i] = (__random_int __height - SIZE - minHeight) + minHeight as float;
}

let velXs: float[3] = [1.0];
let velYs: float[3] = [0.0];
let cols: colour[3] = [#000000];
cols = getRandomCols();

let DELTA_T_MS: int = 75;
let DELTA_T: float = 1.0 / (DELTA_T_MS as float);

fun clamp(val: float, min: float, max: float) -> float {
    if(val < min){
        return min;
    }

    if(val > max){
        return max;
    }

    return val;
}

fun getRandomCols() -> colour[3] {
    let cols: colour[3] = [#000000];
    for(let i: int = 0; i < 3; i = i + 1){
        cols[i] = ((__random_int (#7F7F7F as int)) + (#7f7f7f as int)) as colour;
    }

    return cols;
}

while(true){
    __clear #000000;

    for(let i: int = 0; i < 3; i = i + 1){
        let velX: float = velXs[i];
        let velY: float = velYs[i];

        let x: float = xS[i];
        let y: float = yS[i];

        velY = velY - 10.0 * DELTA_T;

        if((y <= 0.0) or (y >= (__height as float))){
            velY = -velY;
        }

        if((x <= 0.0) or (x >= (__width as float))){
            velX = -velX;
        }

        x = clamp(x + velX, 0.0, __width as float);
        y = clamp(y + velY, 0.0, __height as float);

        __write_box (x as int), (y as int), SIZE, SIZE, cols[i];

        velXs[i] = velX;
        velYs[i] = velY;
        xS[i] = x;
        yS[i] = y;
    }
    
    __delay DELTA_T_MS;
}
